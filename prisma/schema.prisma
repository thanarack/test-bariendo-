// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}

model Organizations {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String              @db.VarChar(250)
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
  userOrganizations UserOrganizations[]
}

model UserOrganizations {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String        @db.Uuid
  organizations_id String        @db.Uuid
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt
  user             User          @relation(fields: [user_id], references: [id])
  organizations    Organizations @relation(fields: [organizations_id], references: [id])
}

model DoctorType {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(250)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      User[]
}

model User {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String              @unique @db.VarChar(250)
  password           String              @db.VarChar(250)
  role               Role
  first_name         String              @default("") @db.VarChar(250)
  last_name          String              @default("") @db.VarChar(250)
  created_at         DateTime            @default(now())
  updated_at         DateTime            @updatedAt
  doctor_type_id     String?             @db.Uuid
  doctorType         DoctorType?         @relation(fields: [doctor_type_id], references: [id])
  organizations      UserOrganizations[]
  userAppointments   Appointments[]      @relation(name: "user")
  doctorAppointments Appointments[]      @relation(name: "doctor")
}

model Appointments {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  doctor_id  String   @db.Uuid
  slot_start DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [id], name: "user")
  doctor     User     @relation(fields: [doctor_id], references: [id], name: "doctor")
}
